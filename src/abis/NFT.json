{
  "contractName": "NFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "NFTRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "phash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "photoCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "registerNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nfthash",
          "type": "string"
        }
      ],
      "name": "registerPhotoNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "addNFTMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"NFTRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addNFTMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"photoCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"registerNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nfthash\",\"type\":\"string\"}],\"name\":\"registerPhotoNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addNFTMetadata(uint256,string)\":{\"details\":\"Public function to add metadata to a NFT\",\"params\":{\"_tokenId\":\"represents a specific NFT\",\"_uri\":\"text which describes the characteristics of a given NFT\"},\"return\":\"whether the NFT metadata was added to the repository\"},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.\",\"params\":{\"_to\":\"address to be approved for the given token ID\",\"_tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"_owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"constructor\":{\"details\":\"Created a NFTRepository with a name and symbol\",\"params\":{\"_name\":\"string represents the name of the repository\",\"_symbol\":\"string represents the symbol of the repository\"}},\"exists(uint256)\":{\"details\":\"Returns whether the specified token exists\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the existance of\"},\"return\":\"whether the token exists\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for a the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"registerNFT(string,address)\":{\"details\":\"Public function to register a new NFTCall the ERC721Token minter\",\"params\":{\"_uri\":\"string containing metadata/uri\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_to\":\"operator address to set the approval\"}},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Repository of ERC721 NFTs This contract contains the list of nfts registered by users. This contract is used to mint and add tokens (NFT)  to the repository.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/NFT.sol\":\"NFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/AddressUtils.sol\":{\"keccak256\":\"0xd5ebc2b4c16066152e923aae6740ba272d3a1069c00bab1cbdcd4435c8219717\",\"urls\":[\"bzz-raw://16e069f0272ec2e114fce37d3089010646a7e9e9058d7a1bdeaa8b7f9c5a8e3b\",\"dweb:/ipfs/QmUeHaNeWqMcrusqGqj8Ub6UVLGi1tBoFYbLokvEDiQQkw\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721.sol\":{\"keccak256\":\"0xcb8502c4433481316732e8c1046d6243b7f068b621f0c6ddcc4a01fbb523438a\",\"urls\":[\"bzz-raw://1f5101cf2e771a0ed1aee94865f30edbd55b76e50c02c9519b7f81199f8c8261\",\"dweb:/ipfs/QmWx8nGDZwyM9biqAE2pDPr5swx1kqFbUhCeZxWCQah3fM\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721Basic.sol\":{\"keccak256\":\"0x1067817f45307fb009d470c280dafc82c6fea3e8de196729beb9af0102917b60\",\"urls\":[\"bzz-raw://a0ec8b8e97120d2c8ea742e993fd776a47b8b43a8911c36b4af7e6d99a6447e0\",\"dweb:/ipfs/QmWvm4ryzSMP1YxCZnHUyViw491BWfkpkP3qGarq99wtuM\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721BasicToken.sol\":{\"keccak256\":\"0xdaa4abe62e87d4ea78c6571ce52f5bbdc322a56a8e77190bc6a7cf4efa1f2fa7\",\"urls\":[\"bzz-raw://d963a55b2259b230c0a19920ba1c166793d5f5965d9b9198cb057fcf68779629\",\"dweb:/ipfs/QmWS2zVgE6iRtFLuE1XuEcjyaQ4HAMDY65vUcKafNrum1X\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721Receiver.sol\":{\"keccak256\":\"0x1d3566daf0efe00c6332a0c04b580d82f37e96719367be0a71ff510389b2195e\",\"urls\":[\"bzz-raw://1beb596e7bdae35ac6559979b851b222af6c0c41b90b82345f1d706afcfb08aa\",\"dweb:/ipfs/QmZq8E6WgGdebF5VWrA5GdV7yMe9bCm4rYpZpYRtMZfbw6\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721Token.sol\":{\"keccak256\":\"0x0d8a3cbb87427fff587df0b64015bd47f5f77816fec83d642085798323fd4b04\",\"urls\":[\"bzz-raw://a981495eead948d2abe5e2e14f7799505430ba852e953312a650ee2c56e6e8f3\",\"dweb:/ipfs/QmetzjHGLrUn2vpnVx5fTri6wstzq8oKSdW2wZiA8XQicd\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/NFT.sol\":{\"keccak256\":\"0x95d8c989ea4ccdadce92af7957cfb5c1872d334ff9b5e10540f18da6cc90d584\",\"urls\":[\"bzz-raw://597cf8e1bd6722b06c43e42fa78bd29d551bb373d3d00ca3d0cc35a9c614e970\",\"dweb:/ipfs/QmdKdcX2gJ2PiiWpn3PuumU9Sx3TduzK82irr6Ahkg9jtB\"]},\"/C/Users/Rishikesh Kale/FootPrints/src/contracts/SafeMath.sol\":{\"keccak256\":\"0x779d7f2cd654958a2325f6d98eda84d16fc8495bd71271ea77cffeef1f30e496\",\"urls\":[\"bzz-raw://885f01c105096561b689e78f98b277c2d67621180fa5ad3bdff92a3c0dafd8b4\",\"dweb:/ipfs/QmcfsxVZ7v9RDxKSDKhbJ27EusqXYg94C6rnRvV94Uqqsq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620025cd380380620025cd833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405250505081818160049080519060200190620001cf92919062000203565b508060059080519060200190620001e892919062000203565b5050506000600b819055506001600c819055505050620002b2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024657805160ff191683800117855562000277565b8280016001018555821562000277579182015b828111156200027657825182559160200191906001019062000259565b5b5090506200028691906200028a565b5090565b620002af91905b80821115620002ab57600081600090555060010162000291565b5090565b90565b61230b80620002c26000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80635122acb3116100b8578063a22cb4651161007c578063a22cb46514610830578063add4fdce14610880578063b88d4fde146109d2578063c87b56dd14610ad7578063d082e38114610b7e578063e985e9c514610b9c57610142565b80635122acb3146105655780636352211e1461064057806370a08231146106ae57806395d89b4114610706578063974911d11461078957610142565b806323b872dd1161010a57806323b872dd146103815780632f745c59146103ef57806342842e0e146104515780634a919ae8146104bf5780634f558e79146104dd5780634f6ccce71461052357610142565b806306fdde0314610147578063081812fc146101ca578063095ea7b3146102385780630d3986a01461028657806318160ddd14610363575b600080fd5b61014f610c18565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f6600480360360208110156101e057600080fd5b8101908080359060200190929190505050610cba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102846004803603604081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf7565b005b6103496004803603604081101561029c57600080fd5b8101908080359060200190929190803590602001906401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e70565b604051808215151515815260200191505060405180910390f35b61036b610e86565b6040518082815260200191505060405180910390f35b6103ed6004803603606081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e93565b005b61043b6004803603604081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f8f565b6040518082815260200191505060405180910390f35b6104bd6004803603606081101561046757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611002565b005b6104c7611037565b6040518082815260200191505060405180910390f35b610509600480360360208110156104f357600080fd5b810190808035906020019092919050505061103d565b604051808215151515815260200191505060405180910390f35b61054f6004803603602081101561053957600080fd5b81019080803590602001909291905050506110ae565b6040518082815260200191505060405180910390f35b61063e6004803603604081101561057b57600080fd5b810190808035906020019064010000000081111561059857600080fd5b8201836020820111156105aa57600080fd5b803590602001918460018302840111640100000000831117156105cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e2565b005b61066c6004803603602081101561065657600080fd5b81019080803590602001909291905050506111e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106f0600480360360208110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611262565b6040518082815260200191505060405180910390f35b61070e6112e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074e578082015181840152602081019050610733565b50505050905090810190601f16801561077b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107b56004803603602081101561079f57600080fd5b8101908080359060200190929190505050611386565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f55780820151818401526020810190506107da565b50505050905090810190601f1680156108225780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61087e6004803603604081101561084657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611436565b005b6109d06004803603604081101561089657600080fd5b81019080803590602001906401000000008111156108b357600080fd5b8201836020820111156108c557600080fd5b803590602001918460018302840111640100000000831117156108e757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561094a57600080fd5b82018360208201111561095c57600080fd5b8035906020019184600183028401116401000000008311171561097e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611570565b005b610ad5600480360360808110156109e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a4f57600080fd5b820183602082011115610a6157600080fd5b80359060200191846001830284011164010000000083111715610a8357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c5565b005b610b0360048036036020811015610aed57600080fd5b8101908080359060200190929190505050611600565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b43578082015181840152602081019050610b28565b50505050905090810190601f168015610b705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b866116c7565b6040518082815260200191505060405180910390f35b610bfe60048036036040811015610bb257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116cd565b604051808215151515815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb05780601f10610c8557610100808354040283529160200191610cb0565b820191906000526020600020905b815481529060010190602001808311610c9357829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d02826111e7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d3d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610d5e83610cba565b73ffffffffffffffffffffffffffffffffffffffff16141580610dae5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610e6b57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000610e7c8383611761565b6001905092915050565b6000600880549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ecd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f0757600080fd5b610f11838261179f565b610f1b8382611904565b610f258282611b17565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000610f9a83611262565b8210610fa557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fef57fe5b9060005260206000200154905092915050565b8061100d3382611bee565b61101657600080fd5b611031848484604051806020016040528060008152506115c5565b50505050565b600c5481565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006110b8610e86565b82106110c357600080fd5b600882815481106110d057fe5b90600052602060002001549050919050565b6000600b5490506110f38282611c83565b6110fd8184610e70565b506002600b5401600b819055507f861b51583da14819944b869387e5671de5253a6408a7c9b31ab10e934b8e632f828285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a657808201518184015260208101905061118b565b50505050905090810190601f1680156111d35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125957600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561129d57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137c5780601f106113515761010080835404028352916020019161137c565b820191906000526020600020905b81548152906001019060200180831161135f57829003601f168201915b5050505050905090565b600d6020528060005260406000206000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142e5780601f106114035761010080835404028352916020019161142e565b820191906000526020600020905b81548152906001019060200180831161141157829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561146f57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600c5490506115813382611c83565b61158b8184610e70565b5081600d600083815260200190815260200160002090805190602001906115b3929190612205565b506002600c5401600c81905550505050565b816115d03382611bee565b6115d957600080fd5b6115e4858585610e93565b6115f085858585611cda565b6115f957600080fd5b5050505050565b606061160b8261103d565b61161457600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116bb5780601f10611690576101008083540402835291602001916116bb565b820191906000526020600020905b81548152906001019060200180831161169e57829003601f168201915b50505050509050919050565b600b5481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61176a8261103d565b61177357600080fd5b80600a6000848152602001908152602001600020908051906020019061179a929190612205565b505050565b8173ffffffffffffffffffffffffffffffffffffffff166117bf826111e7565b73ffffffffffffffffffffffffffffffffffffffff16146117df57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119005760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b61190e8282611e8f565b600060076000838152602001908152602001600020549050600061197e6001600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611fbb90919063ffffffff16565b90506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119cc57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611a2457fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611a7e57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ade9190612285565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b611b218282611fd2565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b600080611bfa836111e7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c6957508373ffffffffffffffffffffffffffffffffffffffff16611c5184610cba565b73ffffffffffffffffffffffffffffffffffffffff16145b80611c7a5750611c7981856116cd565b5b91505092915050565b611c8d8282612128565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000611cfb8473ffffffffffffffffffffffffffffffffffffffff166121d6565b611d085760019050611e87565b60008473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611db0578082015181840152602081019050611d95565b50505050905090810190601f168015611ddd5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dfe57600080fd5b505af1158015611e12573d6000803e3d6000fd5b505050506040513d6020811015611e2857600080fd5b8101908080519060200190929190505050905063f0b9e5ba60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8173ffffffffffffffffffffffffffffffffffffffff16611eaf826111e7565b73ffffffffffffffffffffffffffffffffffffffff1614611ecf57600080fd5b611f226001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fbb90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115611fc757fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461203d57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120e16001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121e990919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561216257600080fd5b61216c8282611b17565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b6000808284019050838110156121fb57fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061224657805160ff1916838001178555612274565b82800160010185558215612274579182015b82811115612273578251825591602001919060010190612258565b5b50905061228191906122b1565b5090565b8154818355818111156122ac578183600052602060002091820191016122ab91906122b1565b5b505050565b6122d391905b808211156122cf5760008160009055506001016122b7565b5090565b9056fea265627a7a7231582037dd25c9daa9dfd40f4621e7afb45cb8a71ead3eb562994415fd740c685cb49364736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80635122acb3116100b8578063a22cb4651161007c578063a22cb46514610830578063add4fdce14610880578063b88d4fde146109d2578063c87b56dd14610ad7578063d082e38114610b7e578063e985e9c514610b9c57610142565b80635122acb3146105655780636352211e1461064057806370a08231146106ae57806395d89b4114610706578063974911d11461078957610142565b806323b872dd1161010a57806323b872dd146103815780632f745c59146103ef57806342842e0e146104515780634a919ae8146104bf5780634f558e79146104dd5780634f6ccce71461052357610142565b806306fdde0314610147578063081812fc146101ca578063095ea7b3146102385780630d3986a01461028657806318160ddd14610363575b600080fd5b61014f610c18565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f6600480360360208110156101e057600080fd5b8101908080359060200190929190505050610cba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102846004803603604081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf7565b005b6103496004803603604081101561029c57600080fd5b8101908080359060200190929190803590602001906401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e70565b604051808215151515815260200191505060405180910390f35b61036b610e86565b6040518082815260200191505060405180910390f35b6103ed6004803603606081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e93565b005b61043b6004803603604081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f8f565b6040518082815260200191505060405180910390f35b6104bd6004803603606081101561046757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611002565b005b6104c7611037565b6040518082815260200191505060405180910390f35b610509600480360360208110156104f357600080fd5b810190808035906020019092919050505061103d565b604051808215151515815260200191505060405180910390f35b61054f6004803603602081101561053957600080fd5b81019080803590602001909291905050506110ae565b6040518082815260200191505060405180910390f35b61063e6004803603604081101561057b57600080fd5b810190808035906020019064010000000081111561059857600080fd5b8201836020820111156105aa57600080fd5b803590602001918460018302840111640100000000831117156105cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e2565b005b61066c6004803603602081101561065657600080fd5b81019080803590602001909291905050506111e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106f0600480360360208110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611262565b6040518082815260200191505060405180910390f35b61070e6112e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074e578082015181840152602081019050610733565b50505050905090810190601f16801561077b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107b56004803603602081101561079f57600080fd5b8101908080359060200190929190505050611386565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f55780820151818401526020810190506107da565b50505050905090810190601f1680156108225780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61087e6004803603604081101561084657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611436565b005b6109d06004803603604081101561089657600080fd5b81019080803590602001906401000000008111156108b357600080fd5b8201836020820111156108c557600080fd5b803590602001918460018302840111640100000000831117156108e757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561094a57600080fd5b82018360208201111561095c57600080fd5b8035906020019184600183028401116401000000008311171561097e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611570565b005b610ad5600480360360808110156109e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a4f57600080fd5b820183602082011115610a6157600080fd5b80359060200191846001830284011164010000000083111715610a8357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c5565b005b610b0360048036036020811015610aed57600080fd5b8101908080359060200190929190505050611600565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b43578082015181840152602081019050610b28565b50505050905090810190601f168015610b705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b866116c7565b6040518082815260200191505060405180910390f35b610bfe60048036036040811015610bb257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116cd565b604051808215151515815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb05780601f10610c8557610100808354040283529160200191610cb0565b820191906000526020600020905b815481529060010190602001808311610c9357829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d02826111e7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d3d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610d5e83610cba565b73ffffffffffffffffffffffffffffffffffffffff16141580610dae5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610e6b57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000610e7c8383611761565b6001905092915050565b6000600880549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ecd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f0757600080fd5b610f11838261179f565b610f1b8382611904565b610f258282611b17565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000610f9a83611262565b8210610fa557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fef57fe5b9060005260206000200154905092915050565b8061100d3382611bee565b61101657600080fd5b611031848484604051806020016040528060008152506115c5565b50505050565b600c5481565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006110b8610e86565b82106110c357600080fd5b600882815481106110d057fe5b90600052602060002001549050919050565b6000600b5490506110f38282611c83565b6110fd8184610e70565b506002600b5401600b819055507f861b51583da14819944b869387e5671de5253a6408a7c9b31ab10e934b8e632f828285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a657808201518184015260208101905061118b565b50505050905090810190601f1680156111d35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125957600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561129d57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137c5780601f106113515761010080835404028352916020019161137c565b820191906000526020600020905b81548152906001019060200180831161135f57829003601f168201915b5050505050905090565b600d6020528060005260406000206000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142e5780601f106114035761010080835404028352916020019161142e565b820191906000526020600020905b81548152906001019060200180831161141157829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561146f57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600c5490506115813382611c83565b61158b8184610e70565b5081600d600083815260200190815260200160002090805190602001906115b3929190612205565b506002600c5401600c81905550505050565b816115d03382611bee565b6115d957600080fd5b6115e4858585610e93565b6115f085858585611cda565b6115f957600080fd5b5050505050565b606061160b8261103d565b61161457600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116bb5780601f10611690576101008083540402835291602001916116bb565b820191906000526020600020905b81548152906001019060200180831161169e57829003601f168201915b50505050509050919050565b600b5481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61176a8261103d565b61177357600080fd5b80600a6000848152602001908152602001600020908051906020019061179a929190612205565b505050565b8173ffffffffffffffffffffffffffffffffffffffff166117bf826111e7565b73ffffffffffffffffffffffffffffffffffffffff16146117df57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119005760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b61190e8282611e8f565b600060076000838152602001908152602001600020549050600061197e6001600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611fbb90919063ffffffff16565b90506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119cc57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611a2457fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611a7e57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ade9190612285565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b611b218282611fd2565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b600080611bfa836111e7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c6957508373ffffffffffffffffffffffffffffffffffffffff16611c5184610cba565b73ffffffffffffffffffffffffffffffffffffffff16145b80611c7a5750611c7981856116cd565b5b91505092915050565b611c8d8282612128565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000611cfb8473ffffffffffffffffffffffffffffffffffffffff166121d6565b611d085760019050611e87565b60008473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611db0578082015181840152602081019050611d95565b50505050905090810190601f168015611ddd5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dfe57600080fd5b505af1158015611e12573d6000803e3d6000fd5b505050506040513d6020811015611e2857600080fd5b8101908080519060200190929190505050905063f0b9e5ba60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8173ffffffffffffffffffffffffffffffffffffffff16611eaf826111e7565b73ffffffffffffffffffffffffffffffffffffffff1614611ecf57600080fd5b611f226001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fbb90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115611fc757fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461203d57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120e16001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121e990919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561216257600080fd5b61216c8282611b17565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b6000808284019050838110156121fb57fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061224657805160ff1916838001178555612274565b82800160010185558215612274579182015b82811115612273578251825591602001919060010190612258565b5b50905061228191906122b1565b5090565b8154818355818111156122ac578183600052602060002091820191016122ab91906122b1565b5b505050565b6122d391905b808211156122cf5760008160009055506001016122b7565b5090565b9056fea265627a7a7231582037dd25c9daa9dfd40f4621e7afb45cb8a71ead3eb562994415fd740c685cb49364736f6c63430005110032",
  "sourceMap": "251:1945:7:-;;;572:161;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:161:7;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;572:161:7;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;572:161:7;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;572:161:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;572:161:7;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;572:161:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:5;654:7;1188:5:5;1180;:13;;;;;;;;;;;;:::i;:::-;;1210:7;1200;:17;;;;;;;;;;;;:::i;:::-;;1110:113;;694:1:7;679:12;:16;;;;724:1;711:12;:14;;;;572:161;;251:1945;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "251:1945:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:1945:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:77:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1320:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3675:113:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3675:113:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3072:367;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3072:367:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1793:151:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1793:151:7;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1793:151:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1793:151:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1793:151:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1793:151:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2607:89:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5178:303:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5178:303:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2282:180:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2282:180:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6101:189:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6101:189:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;326:27:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2506:143:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2506:143:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3028::5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3028:143:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;951:285:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;951:285:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;951:285:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;951:285:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;951:285:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;951:285:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2157:168:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2157:168:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1796:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:145:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1498:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1498:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:40:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;745:40:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;745:40:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4076:209:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4076:209:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1244:279:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1244:279:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1244:279:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1244:279:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1244:279:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1244:279:7;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1244:279:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1244:279:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1244:279:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1244:279:7;;;;;;;;;;;;;;;:::i;:::-;;6980:275:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6980:275:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6980:275:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6980:275:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6980:275:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6980:275:3;;;;;;;;;;;;;;;:::i;:::-;;1775:143:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1775:143:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1775:143:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:27:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4602:144:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4602:144:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1320:77:5;1357:13;1386:5;1379:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:77;:::o;3675:113:3:-;3735:7;3758:14;:24;3773:8;3758:24;;;;;;;;;;;;;;;;;;;;;3751:31;;3675:113;;;:::o;3072:367::-;3134:13;3150:17;3158:8;3150:7;:17::i;:::-;3134:33;;3189:5;3182:12;;:3;:12;;;;3174:21;;;;;;3318:1;3285:35;;:21;3297:8;3285:11;:21::i;:::-;:35;;;;:56;;;;3339:1;3324:17;;:3;:17;;;;3285:56;3281:153;;;3379:3;3352:14;:24;3367:8;3352:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3412:3;3396:30;;3405:5;3396:30;;;3417:8;3396:30;;;;;;;;;;;;;;;;;;3281:153;3072:367;;;:::o;1793:151:7:-;1870:4;1886:28;1899:8;1909:4;1886:12;:28::i;:::-;1932:4;1925:11;;1793:151;;;;:::o;2607:89:5:-;2651:7;2674:9;:16;;;;2667:23;;2607:89;:::o;5178:303:3:-;5285:1;5268:19;;:5;:19;;;;5260:28;;;;;;5318:1;5303:17;;:3;:17;;;;5295:26;;;;;;5330:30;5344:5;5351:8;5330:13;:30::i;:::-;5367:32;5383:5;5390:8;5367:15;:32::i;:::-;5406:25;5417:3;5422:8;5406:10;:25::i;:::-;5461:3;5445:30;;5454:5;5445:30;;;5466:8;5445:30;;;;;;;;;;;;;;;;;;5178:303;;;:::o;2282:180:5:-;2364:7;2397:17;2407:6;2397:9;:17::i;:::-;2388:6;:26;2380:35;;;;;;2429:11;:19;2441:6;2429:19;;;;;;;;;;;;;;;2449:6;2429:27;;;;;;;;;;;;;;;;2422:34;;2282:180;;;;:::o;6101:189:3:-;6222:8;1547:39;1565:10;1577:8;1547:17;:39::i;:::-;1539:48;;;;;;6242:42;6259:5;6266:3;6271:8;6242:42;;;;;;;;;;;;:16;:42::i;:::-;6101:189;;;;:::o;326:27:7:-;;;;:::o;2506:143:3:-;2561:4;2574:13;2590:10;:20;2601:8;2590:20;;;;;;;;;;;;;;;;;;;;;2574:36;;2641:1;2624:19;;:5;:19;;;;2617:26;;;2506:143;;;:::o;3028::5:-;3087:7;3120:13;:11;:13::i;:::-;3111:6;:22;3103:31;;;;;;3148:9;3158:6;3148:17;;;;;;;;;;;;;;;;3141:24;;3028:143;;;:::o;951:285:7:-;1027:15;1045:12;;1027:30;;1068:24;1074:8;1084:7;1068:5;:24::i;:::-;1103:29;1118:7;1127:4;1103:14;:29::i;:::-;;1173:1;1158:12;;:16;1143:12;:31;;;;1190:38;1204:8;1214:7;1223:4;1190:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1190:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:285;;;:::o;2157:168:3:-;2213:7;2229:13;2245:10;:20;2256:8;2245:20;;;;;;;;;;;;;;;;;;;;;2229:36;;2297:1;2280:19;;:5;:19;;;;2272:28;;;;;;2314:5;2307:12;;;2157:168;;;:::o;1796:145::-;1852:7;1894:1;1876:20;;:6;:20;;;;1868:29;;;;;;1911:16;:24;1928:6;1911:24;;;;;;;;;;;;;;;;1904:31;;1796:145;;;:::o;1498:81:5:-;1537:13;1566:7;1559:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:81;:::o;745:40:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4076:209:3:-;4161:10;4154:17;;:3;:17;;;;4146:26;;;;;;4216:9;4179:17;:29;4197:10;4179:29;;;;;;;;;;;;;;;:34;4209:3;4179:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4264:3;4237:42;;4252:10;4237:42;;;4269:9;4237:42;;;;;;;;;;;;;;;;;;;;;;4076:209;;:::o;1244:279:7:-;1331:15;1349:12;;1331:30;;1372:26;1378:10;1390:7;1372:5;:26::i;:::-;1409:29;1424:7;1433:4;1409:14;:29::i;:::-;;1466:7;1449:5;:14;1455:7;1449:14;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;1514:1;1499:12;;:16;1484:12;:31;;;;1244:279;;;:::o;6980:275:3:-;7126:8;1547:39;1565:10;1577:8;1547:17;:39::i;:::-;1539:48;;;;;;7146:34;7159:5;7166:3;7171:8;7146:12;:34::i;:::-;7195:53;7220:5;7227:3;7232:8;7242:5;7195:24;:53::i;:::-;7187:62;;;;;;6980:275;;;;;:::o;1775:143:5:-;1832:13;1862:16;1869:8;1862:6;:16::i;:::-;1854:25;;;;;;1893:9;:19;1903:8;1893:19;;;;;;;;;;;1886:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:143;;;:::o;292:27:7:-;;;;:::o;4602:144:3:-;4684:4;4704:17;:25;4722:6;4704:25;;;;;;;;;;;;;;;:36;4730:9;4704:36;;;;;;;;;;;;;;;;;;;;;;;;;4697:43;;4602:144;;;;:::o;3404:140:5:-;3488:16;3495:8;3488:6;:16::i;:::-;3480:25;;;;;;3534:4;3512:9;:19;3522:8;3512:19;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3404:140;;:::o;8940:271:3:-;9042:6;9021:27;;:17;9029:8;9021:7;:17::i;:::-;:27;;;9013:36;;;;;;9096:1;9060:38;;:14;:24;9075:8;9060:24;;;;;;;;;;;;;;;;;;;;;:38;;;9056:150;;9144:1;9109:14;:24;9124:8;9109:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9185:1;9160:38;;9169:6;9160:38;;;9189:8;9160:38;;;;;;;;;;;;;;;;;;9056:150;8940:271;;:::o;4323:872:5:-;4397:38;4419:5;4426:8;4397:21;:38::i;:::-;4444:18;4465:16;:26;4482:8;4465:26;;;;;;;;;;;;4444:47;;4498:22;4523:32;4553:1;4523:11;:18;4535:5;4523:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4498:57;;4562:17;4582:11;:18;4594:5;4582:18;;;;;;;;;;;;;;;4601:14;4582:34;;;;;;;;;;;;;;;;4562:54;;4658:9;4625:11;:18;4637:5;4625:18;;;;;;;;;;;;;;;4644:10;4625:30;;;;;;;;;;;;;;;:42;;;;4711:1;4674:11;:18;4686:5;4674:18;;;;;;;;;;;;;;;4693:14;4674:34;;;;;;;;;;;;;;;:38;;;;5078:11;:18;5090:5;5078:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5141:1;5112:16;:26;5129:8;5112:26;;;;;;;;;;;:30;;;;5179:10;5149:16;:27;5166:9;5149:27;;;;;;;;;;;:40;;;;4323:872;;;;;:::o;3810:231::-;3877:31;3894:3;3899:8;3877:16;:31::i;:::-;3915:14;3932:11;:16;3944:3;3932:16;;;;;;;;;;;;;;;:23;;;;3915:40;;3962:11;:16;3974:3;3962:16;;;;;;;;;;;;;;;3984:8;3962:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3962:31:5;;;;;;;;;;;;;;;;;;;;;;4029:6;4000:16;:26;4017:8;4000:26;;;;;;;;;;;:35;;;;3810:231;;;:::o;7611:243:3:-;7697:4;7710:13;7726:17;7734:8;7726:7;:17::i;:::-;7710:33;;7769:5;7757:17;;:8;:17;;;:54;;;;7803:8;7778:33;;:21;7790:8;7778:11;:21::i;:::-;:33;;;7757:54;:91;;;;7815:33;7832:5;7839:8;7815:16;:33::i;:::-;7757:91;7750:98;;;7611:243;;;;:::o;5464:177:5:-;5526:26;5538:3;5543:8;5526:11;:26::i;:::-;5588:9;:16;;;;5561:14;:24;5576:8;5561:24;;;;;;;;;;;:43;;;;5611:9;5626:8;5611:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5611:24:5;;;;;;;;;;;;;;;;;;;;;;5464:177;;:::o;10699:349:3:-;10852:4;10873:16;:3;:14;;;:16::i;:::-;10868:51;;10907:4;10900:11;;;;10868:51;10925:13;10956:3;10941:36;;;10978:5;10985:8;10995:5;10941:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10941:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10941:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10941:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10941:60:3;;;;;;;;;;;;;;;;10925:76;;609:10;11026:15;;11016:25;;;:6;:25;;;;11008:34;;;10699:349;;;;;;;:::o;9967:218::-;10070:5;10049:26;;:17;10057:8;10049:7;:17::i;:::-;:26;;;10041:35;;;;;;10109:30;10137:1;10109:16;:23;10126:5;10109:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10083:16;:23;10100:5;10083:23;;;;;;;;;;;;;;;:56;;;;10177:1;10146:10;:20;10157:8;10146:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9967:218;;:::o;876:113:10:-;934:7;962:1;957;:6;;950:14;;;;982:1;978;:5;971:12;;876:113;;;;:::o;9477:208:3:-;9584:1;9552:34;;:10;:20;9563:8;9552:20;;;;;;;;;;;;;;;;;;;;;:34;;;9544:43;;;;;;9617:3;9594:10;:20;9605:8;9594:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9651:28;9677:1;9651:16;:21;9668:3;9651:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9627:16;:21;9644:3;9627:21;;;;;;;;;;;;;;;:52;;;;9477:208;;:::o;8111:173::-;8196:1;8181:17;;:3;:17;;;;8173:26;;;;;;8206:25;8217:3;8222:8;8206:10;:25::i;:::-;8264:3;8243:35;;8260:1;8243:35;;;8269:8;8243:35;;;;;;;;;;;;;;;;;;8111:173;;:::o;453:578:0:-;510:4;523:12;945:4;933:17;925:25;;1024:1;1017:4;:8;1010:15;;;453:578;;;:::o;1056:133:10:-;1114:7;1130:9;1146:1;1142;:5;1130:17;;1166:1;1161;:6;;1154:14;;;;1182:1;1175:8;;;1056:133;;;;:::o;251:1945:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\nimport \"./ERC721Token.sol\";\r\n\r\n/**\r\n * @title Repository of ERC721 NFTs\r\n * This contract contains the list of nfts registered by users.\r\n * This contract is used to mint and add tokens (NFT) \r\n * to the repository.\r\n */\r\n \r\ncontract NFT is ERC721Token {\r\n    \r\n    uint256 public tokenCounter;\r\n    uint256 public photoCounter;\r\n\r\n    /**\r\n    * @dev Created a NFTRepository with a name and symbol\r\n    * @param _name string represents the name of the repository\r\n    * @param _symbol string represents the symbol of the repository\r\n    */\r\n    constructor(string memory _name, string memory _symbol) public ERC721Token(_name, _symbol) {\r\n             tokenCounter = 0;\r\n             photoCounter=1;\r\n    }\r\n    \r\n    mapping (uint256 => string) public phash;\r\n\r\n    /**\r\n    * @dev Public function to register a new NFT\r\n    * @dev Call the ERC721Token minter\r\n    * @param _uri string containing metadata/uri\r\n    */\r\n    function registerNFT(string memory _uri,address _address) public {\r\n        uint256 tokenId = tokenCounter;\r\n        _mint(_address, tokenId);\r\n        addNFTMetadata(tokenId, _uri);\r\n        tokenCounter = tokenCounter + 2;\r\n        emit NFTRegistered(_address, tokenId, _uri);\r\n    }\r\n\r\n    function registerPhotoNFT(string memory _uri, string memory nfthash) public {\r\n        uint256 tokenId = photoCounter;\r\n        _mint(msg.sender, tokenId);\r\n        addNFTMetadata(tokenId, _uri);\r\n        phash[tokenId] = nfthash;\r\n        photoCounter = photoCounter + 2;\r\n    }\r\n\r\n    /**\r\n    * @dev Public function to add metadata to a NFT\r\n    * @param _tokenId represents a specific NFT\r\n    * @param _uri text which describes the characteristics of a given NFT\r\n    * @return whether the NFT metadata was added to the repository\r\n    */\r\n    function addNFTMetadata(uint256 _tokenId, string memory _uri) public returns(bool){\r\n        _setTokenURI(_tokenId, _uri);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Event is triggered if NFT/token is registered\r\n    * @param _by address of the registrar\r\n    * @param _tokenId uint256 represents a specific NFT\r\n    */\r\n    event NFTRegistered(address _by, uint256 _tokenId, string _uri);\r\n\r\n}",
  "sourcePath": "C:/Users/Rishikesh Kale/FootPrints/src/contracts/NFT.sol",
  "ast": {
    "absolutePath": "/C/Users/Rishikesh Kale/FootPrints/src/contracts/NFT.sol",
    "exportedSymbols": {
      "NFT": [
        1326
      ]
    },
    "id": 1327,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1200,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721Token.sol",
        "file": "./ERC721Token.sol",
        "id": 1201,
        "nodeType": "ImportDirective",
        "scope": 1327,
        "sourceUnit": 1134,
        "src": "26:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1202,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1133,
              "src": "267:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1133",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 1203,
            "nodeType": "InheritanceSpecifier",
            "src": "267:11:7"
          }
        ],
        "contractDependencies": [
          45,
          65,
          72,
          179,
          746,
          1133
        ],
        "contractKind": "contract",
        "documentation": "@title Repository of ERC721 NFTs\nThis contract contains the list of nfts registered by users.\nThis contract is used to mint and add tokens (NFT) \nto the repository.",
        "fullyImplemented": true,
        "id": 1326,
        "linearizedBaseContracts": [
          1326,
          1133,
          746,
          72,
          65,
          45,
          179
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1205,
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 1326,
            "src": "292:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "292:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1207,
            "name": "photoCounter",
            "nodeType": "VariableDeclaration",
            "scope": 1326,
            "src": "326:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1226,
              "nodeType": "Block",
              "src": "663:70:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1218,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "679:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "694:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "679:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "679:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1222,
                      "name": "photoCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "711:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "724:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "711:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "711:14:7"
                }
              ]
            },
            "documentation": "@dev Created a NFTRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
            "id": 1227,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1214,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1209,
                    "src": "647:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1215,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1211,
                    "src": "654:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1216,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1213,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1133,
                  "src": "635:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1133_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "635:27:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "584:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "605:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:44:7"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:7"
            },
            "scope": 1326,
            "src": "572:161:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1231,
            "name": "phash",
            "nodeType": "VariableDeclaration",
            "scope": 1326,
            "src": "745:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1230,
              "keyType": {
                "id": 1228,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "754:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "745:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1229,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "765:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "1016:220:7",
              "statements": [
                {
                  "assignments": [
                    1239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1239,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "1027:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1241,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1240,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1205,
                    "src": "1045:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1243,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "1074:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "1084:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1242,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1053
                      ],
                      "referencedDeclaration": 1053,
                      "src": "1068:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:24:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1248,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "1118:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1249,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "1127:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1247,
                      "name": "addNFTMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "1103:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1252,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "1143:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "1158:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1173:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1158:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1143:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:31:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1259,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "1204:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1260,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "1214:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1261,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "1223:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1258,
                      "name": "NFTRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1190:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "EmitStatement",
                  "src": "1185:43:7"
                }
              ]
            },
            "documentation": "@dev Public function to register a new NFT\n@dev Call the ERC721Token minter\n@param _uri string containing metadata/uri",
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "972:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "991:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "971:37:7"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:7"
            },
            "scope": 1326,
            "src": "951:285:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1299,
              "nodeType": "Block",
              "src": "1320:203:7",
              "statements": [
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1299,
                      "src": "1331:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1331:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1275,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1274,
                    "name": "photoCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1207,
                    "src": "1349:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1331:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2985,
                          "src": "1378:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1378:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1279,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "1390:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1276,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1053
                      ],
                      "referencedDeclaration": 1053,
                      "src": "1372:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:26:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1283,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "1424:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1284,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "1433:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1282,
                      "name": "addNFTMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "1409:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1409:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1287,
                        "name": "phash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "1449:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1289,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1288,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "1455:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1449:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1290,
                      "name": "nfthash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "1466:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1449:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:24:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1293,
                      "name": "photoCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1484:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "photoCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "1499:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1499:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1484:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:31:7"
                }
              ]
            },
            "documentation": null,
            "id": 1300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerPhotoNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "1270:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1269,
                  "name": "nfthash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "1290:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1269:43:7"
            },
            "returnParameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1320:0:7"
            },
            "scope": 1326,
            "src": "1244:279:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1316,
              "nodeType": "Block",
              "src": "1875:69:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1899:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1311,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "1909:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1309,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "1886:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1313,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:28:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1932:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1308,
                  "id": 1315,
                  "nodeType": "Return",
                  "src": "1925:11:7"
                }
              ]
            },
            "documentation": "@dev Public function to add metadata to a NFT\n@param _tokenId represents a specific NFT\n@param _uri text which describes the characteristics of a given NFT\n@return whether the NFT metadata was added to the repository",
            "id": 1317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNFTMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "1817:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "1835:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:38:7"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "1870:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1869:6:7"
            },
            "scope": 1326,
            "src": "1793:151:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Event is triggered if NFT/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific NFT",
            "id": 1325,
            "name": "NFTRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1319,
                  "indexed": false,
                  "name": "_by",
                  "nodeType": "VariableDeclaration",
                  "scope": 1325,
                  "src": "2147:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1321,
                  "indexed": false,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1325,
                  "src": "2160:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "indexed": false,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1325,
                  "src": "2178:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2178:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2146:44:7"
            },
            "src": "2127:64:7"
          }
        ],
        "scope": 1327,
        "src": "251:1945:7"
      }
    ],
    "src": "0:2196:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/Rishikesh Kale/FootPrints/src/contracts/NFT.sol",
      "exportedSymbols": {
        "NFT": [
          1326
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 1200,
        "name": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1134,
          "absolutePath": "/C/Users/Rishikesh Kale/FootPrints/src/contracts/ERC721Token.sol",
          "file": "./ERC721Token.sol",
          "scope": 1327,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1201,
        "name": "ImportDirective",
        "src": "26:27:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            45,
            65,
            72,
            179,
            746,
            1133
          ],
          "contractKind": "contract",
          "documentation": "@title Repository of ERC721 NFTs\nThis contract contains the list of nfts registered by users.\nThis contract is used to mint and add tokens (NFT) \nto the repository.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1326,
            1133,
            746,
            72,
            65,
            45,
            179
          ],
          "name": "NFT",
          "scope": 1327
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Token",
                  "referencedDeclaration": 1133,
                  "type": "contract ERC721Token"
                },
                "id": 1202,
                "name": "UserDefinedTypeName",
                "src": "267:11:7"
              }
            ],
            "id": 1203,
            "name": "InheritanceSpecifier",
            "src": "267:11:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tokenCounter",
              "scope": 1326,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1204,
                "name": "ElementaryTypeName",
                "src": "292:7:7"
              }
            ],
            "id": 1205,
            "name": "VariableDeclaration",
            "src": "292:27:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "photoCounter",
              "scope": 1326,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1206,
                "name": "ElementaryTypeName",
                "src": "326:7:7"
              }
            ],
            "id": 1207,
            "name": "VariableDeclaration",
            "src": "326:27:7"
          },
          {
            "attributes": {
              "documentation": "@dev Created a NFTRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1326,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 1227,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1208,
                        "name": "ElementaryTypeName",
                        "src": "584:6:7"
                      }
                    ],
                    "id": 1209,
                    "name": "VariableDeclaration",
                    "src": "584:19:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 1227,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1210,
                        "name": "ElementaryTypeName",
                        "src": "605:6:7"
                      }
                    ],
                    "id": 1211,
                    "name": "VariableDeclaration",
                    "src": "605:21:7"
                  }
                ],
                "id": 1212,
                "name": "ParameterList",
                "src": "583:44:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1217,
                "name": "ParameterList",
                "src": "663:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1133,
                      "type": "type(contract ERC721Token)",
                      "value": "ERC721Token"
                    },
                    "id": 1213,
                    "name": "Identifier",
                    "src": "635:11:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1209,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 1214,
                    "name": "Identifier",
                    "src": "647:5:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1211,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 1215,
                    "name": "Identifier",
                    "src": "654:7:7"
                  }
                ],
                "id": 1216,
                "name": "ModifierInvocation",
                "src": "635:27:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1205,
                              "type": "uint256",
                              "value": "tokenCounter"
                            },
                            "id": 1218,
                            "name": "Identifier",
                            "src": "679:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1219,
                            "name": "Literal",
                            "src": "694:1:7"
                          }
                        ],
                        "id": 1220,
                        "name": "Assignment",
                        "src": "679:16:7"
                      }
                    ],
                    "id": 1221,
                    "name": "ExpressionStatement",
                    "src": "679:16:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1207,
                              "type": "uint256",
                              "value": "photoCounter"
                            },
                            "id": 1222,
                            "name": "Identifier",
                            "src": "711:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1223,
                            "name": "Literal",
                            "src": "724:1:7"
                          }
                        ],
                        "id": 1224,
                        "name": "Assignment",
                        "src": "711:14:7"
                      }
                    ],
                    "id": 1225,
                    "name": "ExpressionStatement",
                    "src": "711:14:7"
                  }
                ],
                "id": 1226,
                "name": "Block",
                "src": "663:70:7"
              }
            ],
            "id": 1227,
            "name": "FunctionDefinition",
            "src": "572:161:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "phash",
              "scope": 1326,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => string)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1228,
                    "name": "ElementaryTypeName",
                    "src": "754:7:7"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 1229,
                    "name": "ElementaryTypeName",
                    "src": "765:6:7"
                  }
                ],
                "id": 1230,
                "name": "Mapping",
                "src": "745:27:7"
              }
            ],
            "id": 1231,
            "name": "VariableDeclaration",
            "src": "745:40:7"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to register a new NFT\n@dev Call the ERC721Token minter\n@param _uri string containing metadata/uri",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerNFT",
              "scope": 1326,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1265,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1232,
                        "name": "ElementaryTypeName",
                        "src": "972:6:7"
                      }
                    ],
                    "id": 1233,
                    "name": "VariableDeclaration",
                    "src": "972:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 1265,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1234,
                        "name": "ElementaryTypeName",
                        "src": "991:7:7"
                      }
                    ],
                    "id": 1235,
                    "name": "VariableDeclaration",
                    "src": "991:16:7"
                  }
                ],
                "id": 1236,
                "name": "ParameterList",
                "src": "971:37:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1237,
                "name": "ParameterList",
                "src": "1016:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1239
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "tokenId",
                          "scope": 1264,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1238,
                            "name": "ElementaryTypeName",
                            "src": "1027:7:7"
                          }
                        ],
                        "id": 1239,
                        "name": "VariableDeclaration",
                        "src": "1027:15:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1205,
                          "type": "uint256",
                          "value": "tokenCounter"
                        },
                        "id": 1240,
                        "name": "Identifier",
                        "src": "1045:12:7"
                      }
                    ],
                    "id": 1241,
                    "name": "VariableDeclarationStatement",
                    "src": "1027:30:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1053
                              ],
                              "referencedDeclaration": 1053,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1242,
                            "name": "Identifier",
                            "src": "1068:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1235,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 1243,
                            "name": "Identifier",
                            "src": "1074:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1239,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1244,
                            "name": "Identifier",
                            "src": "1084:7:7"
                          }
                        ],
                        "id": 1245,
                        "name": "FunctionCall",
                        "src": "1068:24:7"
                      }
                    ],
                    "id": 1246,
                    "name": "ExpressionStatement",
                    "src": "1068:24:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1317,
                              "type": "function (uint256,string memory) returns (bool)",
                              "value": "addNFTMetadata"
                            },
                            "id": 1247,
                            "name": "Identifier",
                            "src": "1103:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1239,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1248,
                            "name": "Identifier",
                            "src": "1118:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1233,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1249,
                            "name": "Identifier",
                            "src": "1127:4:7"
                          }
                        ],
                        "id": 1250,
                        "name": "FunctionCall",
                        "src": "1103:29:7"
                      }
                    ],
                    "id": 1251,
                    "name": "ExpressionStatement",
                    "src": "1103:29:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1205,
                              "type": "uint256",
                              "value": "tokenCounter"
                            },
                            "id": 1252,
                            "name": "Identifier",
                            "src": "1143:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1205,
                                  "type": "uint256",
                                  "value": "tokenCounter"
                                },
                                "id": 1253,
                                "name": "Identifier",
                                "src": "1158:12:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 1254,
                                "name": "Literal",
                                "src": "1173:1:7"
                              }
                            ],
                            "id": 1255,
                            "name": "BinaryOperation",
                            "src": "1158:16:7"
                          }
                        ],
                        "id": 1256,
                        "name": "Assignment",
                        "src": "1143:31:7"
                      }
                    ],
                    "id": 1257,
                    "name": "ExpressionStatement",
                    "src": "1143:31:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1325,
                              "type": "function (address,uint256,string memory)",
                              "value": "NFTRegistered"
                            },
                            "id": 1258,
                            "name": "Identifier",
                            "src": "1190:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1235,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 1259,
                            "name": "Identifier",
                            "src": "1204:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1239,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1260,
                            "name": "Identifier",
                            "src": "1214:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1233,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1261,
                            "name": "Identifier",
                            "src": "1223:4:7"
                          }
                        ],
                        "id": 1262,
                        "name": "FunctionCall",
                        "src": "1190:38:7"
                      }
                    ],
                    "id": 1263,
                    "name": "EmitStatement",
                    "src": "1185:43:7"
                  }
                ],
                "id": 1264,
                "name": "Block",
                "src": "1016:220:7"
              }
            ],
            "id": 1265,
            "name": "FunctionDefinition",
            "src": "951:285:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerPhotoNFT",
              "scope": 1326,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1300,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1266,
                        "name": "ElementaryTypeName",
                        "src": "1270:6:7"
                      }
                    ],
                    "id": 1267,
                    "name": "VariableDeclaration",
                    "src": "1270:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "nfthash",
                      "scope": 1300,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1268,
                        "name": "ElementaryTypeName",
                        "src": "1290:6:7"
                      }
                    ],
                    "id": 1269,
                    "name": "VariableDeclaration",
                    "src": "1290:21:7"
                  }
                ],
                "id": 1270,
                "name": "ParameterList",
                "src": "1269:43:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1271,
                "name": "ParameterList",
                "src": "1320:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1273
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "tokenId",
                          "scope": 1299,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1272,
                            "name": "ElementaryTypeName",
                            "src": "1331:7:7"
                          }
                        ],
                        "id": 1273,
                        "name": "VariableDeclaration",
                        "src": "1331:15:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1207,
                          "type": "uint256",
                          "value": "photoCounter"
                        },
                        "id": 1274,
                        "name": "Identifier",
                        "src": "1349:12:7"
                      }
                    ],
                    "id": 1275,
                    "name": "VariableDeclarationStatement",
                    "src": "1331:30:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1053
                              ],
                              "referencedDeclaration": 1053,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1276,
                            "name": "Identifier",
                            "src": "1372:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2985,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1277,
                                "name": "Identifier",
                                "src": "1378:3:7"
                              }
                            ],
                            "id": 1278,
                            "name": "MemberAccess",
                            "src": "1378:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1273,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1279,
                            "name": "Identifier",
                            "src": "1390:7:7"
                          }
                        ],
                        "id": 1280,
                        "name": "FunctionCall",
                        "src": "1372:26:7"
                      }
                    ],
                    "id": 1281,
                    "name": "ExpressionStatement",
                    "src": "1372:26:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1317,
                              "type": "function (uint256,string memory) returns (bool)",
                              "value": "addNFTMetadata"
                            },
                            "id": 1282,
                            "name": "Identifier",
                            "src": "1409:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1273,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1283,
                            "name": "Identifier",
                            "src": "1424:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1267,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1284,
                            "name": "Identifier",
                            "src": "1433:4:7"
                          }
                        ],
                        "id": 1285,
                        "name": "FunctionCall",
                        "src": "1409:29:7"
                      }
                    ],
                    "id": 1286,
                    "name": "ExpressionStatement",
                    "src": "1409:29:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1231,
                                  "type": "mapping(uint256 => string storage ref)",
                                  "value": "phash"
                                },
                                "id": 1287,
                                "name": "Identifier",
                                "src": "1449:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1273,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 1288,
                                "name": "Identifier",
                                "src": "1455:7:7"
                              }
                            ],
                            "id": 1289,
                            "name": "IndexAccess",
                            "src": "1449:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1269,
                              "type": "string memory",
                              "value": "nfthash"
                            },
                            "id": 1290,
                            "name": "Identifier",
                            "src": "1466:7:7"
                          }
                        ],
                        "id": 1291,
                        "name": "Assignment",
                        "src": "1449:24:7"
                      }
                    ],
                    "id": 1292,
                    "name": "ExpressionStatement",
                    "src": "1449:24:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1207,
                              "type": "uint256",
                              "value": "photoCounter"
                            },
                            "id": 1293,
                            "name": "Identifier",
                            "src": "1484:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1207,
                                  "type": "uint256",
                                  "value": "photoCounter"
                                },
                                "id": 1294,
                                "name": "Identifier",
                                "src": "1499:12:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 1295,
                                "name": "Literal",
                                "src": "1514:1:7"
                              }
                            ],
                            "id": 1296,
                            "name": "BinaryOperation",
                            "src": "1499:16:7"
                          }
                        ],
                        "id": 1297,
                        "name": "Assignment",
                        "src": "1484:31:7"
                      }
                    ],
                    "id": 1298,
                    "name": "ExpressionStatement",
                    "src": "1484:31:7"
                  }
                ],
                "id": 1299,
                "name": "Block",
                "src": "1320:203:7"
              }
            ],
            "id": 1300,
            "name": "FunctionDefinition",
            "src": "1244:279:7"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to add metadata to a NFT\n@param _tokenId represents a specific NFT\n@param _uri text which describes the characteristics of a given NFT\n@return whether the NFT metadata was added to the repository",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addNFTMetadata",
              "scope": 1326,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1317,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1301,
                        "name": "ElementaryTypeName",
                        "src": "1817:7:7"
                      }
                    ],
                    "id": 1302,
                    "name": "VariableDeclaration",
                    "src": "1817:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1317,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1303,
                        "name": "ElementaryTypeName",
                        "src": "1835:6:7"
                      }
                    ],
                    "id": 1304,
                    "name": "VariableDeclaration",
                    "src": "1835:18:7"
                  }
                ],
                "id": 1305,
                "name": "ParameterList",
                "src": "1816:38:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1317,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1306,
                        "name": "ElementaryTypeName",
                        "src": "1870:4:7"
                      }
                    ],
                    "id": 1307,
                    "name": "VariableDeclaration",
                    "src": "1870:4:7"
                  }
                ],
                "id": 1308,
                "name": "ParameterList",
                "src": "1869:6:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 917,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 1309,
                            "name": "Identifier",
                            "src": "1886:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1302,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1310,
                            "name": "Identifier",
                            "src": "1899:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1304,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1311,
                            "name": "Identifier",
                            "src": "1909:4:7"
                          }
                        ],
                        "id": 1312,
                        "name": "FunctionCall",
                        "src": "1886:28:7"
                      }
                    ],
                    "id": 1313,
                    "name": "ExpressionStatement",
                    "src": "1886:28:7"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1308
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1314,
                        "name": "Literal",
                        "src": "1932:4:7"
                      }
                    ],
                    "id": 1315,
                    "name": "Return",
                    "src": "1925:11:7"
                  }
                ],
                "id": 1316,
                "name": "Block",
                "src": "1875:69:7"
              }
            ],
            "id": 1317,
            "name": "FunctionDefinition",
            "src": "1793:151:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev Event is triggered if NFT/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific NFT",
              "name": "NFTRegistered"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_by",
                      "scope": 1325,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1318,
                        "name": "ElementaryTypeName",
                        "src": "2147:7:7"
                      }
                    ],
                    "id": 1319,
                    "name": "VariableDeclaration",
                    "src": "2147:11:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_tokenId",
                      "scope": 1325,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1320,
                        "name": "ElementaryTypeName",
                        "src": "2160:7:7"
                      }
                    ],
                    "id": 1321,
                    "name": "VariableDeclaration",
                    "src": "2160:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_uri",
                      "scope": 1325,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1322,
                        "name": "ElementaryTypeName",
                        "src": "2178:6:7"
                      }
                    ],
                    "id": 1323,
                    "name": "VariableDeclaration",
                    "src": "2178:11:7"
                  }
                ],
                "id": 1324,
                "name": "ParameterList",
                "src": "2146:44:7"
              }
            ],
            "id": 1325,
            "name": "EventDefinition",
            "src": "2127:64:7"
          }
        ],
        "id": 1326,
        "name": "ContractDefinition",
        "src": "251:1945:7"
      }
    ],
    "id": 1327,
    "name": "SourceUnit",
    "src": "0:2196:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xDe5aFD2C0A2047242Cc0C2eCaB4eBaf966790627",
      "transactionHash": "0xea2df830141c19c6f9933abb554d737640d22920ed0eb44692234b139142ea21"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-13T17:57:44.705Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addNFTMetadata(uint256,string)": {
        "details": "Public function to add metadata to a NFT",
        "params": {
          "_tokenId": "represents a specific NFT",
          "_uri": "text which describes the characteristics of a given NFT"
        },
        "return": "whether the NFT metadata was added to the repository"
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.",
        "params": {
          "_to": "address to be approved for the given token ID",
          "_tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "_owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "constructor": {
        "details": "Created a NFTRepository with a name and symbol",
        "params": {
          "_name": "string represents the name of the repository",
          "_symbol": "string represents the symbol of the repository"
        }
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existance of"
        },
        "return": "whether the token exists"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set",
        "params": {
          "_tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for a the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "_tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "registerNFT(string,address)": {
        "details": "Public function to register a new NFTCall the ERC721Token minter",
        "params": {
          "_uri": "string containing metadata/uri"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens",
        "params": {
          "_index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.",
        "params": {
          "_tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Repository of ERC721 NFTs This contract contains the list of nfts registered by users. This contract is used to mint and add tokens (NFT)  to the repository."
  },
  "userdoc": {
    "methods": {}
  }
}